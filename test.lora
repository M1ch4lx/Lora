
function hello(name)
{
    print("Hello " + name + "!");
}

return;

import Vector as vec;

function linspace(begin, end, count)
{
    length = end - begin;
    step = length / (count + 1);
    array = [];
    current = begin + step;
    for(i in range(0, count))
    {
        array = array + [current];
        current = current + step;
    }
    return array;
}

function calculate_values(args, func)
{
    values = args;
    for(pair in enumerate(args))
    {
        i, arg = pair;
        values[i] = func(arg);
    }
    return values;
}

function identity(x)
{
    return x;
}

function linear(x)
{
    return 2*x + 5;
}

function quadratic(x)
{
    return 2*x*x + 5;
}

x = linspace(0, 100, 100);

#y = calculate_values(x, identity);
#y = calculate_values(x, linear);
y = calculate_values(x, quadratic);

plot(x, y);

function bubbleSort(array: Array) {
    n = array.size();
    for (i in range(0, n-1)) {
        for (j in range(0, n-(i+1))) {
            if (array[j] > array[j+1]) {
                temp = array[j];
                array[j] = array[j+1];
                array[j+1] = temp;
            }
        }
    }
    return array;
}

array = bubbleSort([1, 3, 2, 1, 2, 7, 5, 9, 10, 2]);
print(array);
# bubbleSort(123);

function fibonacci_recursive(n: Number) : Number {
    if (n <= 1) {
        return n;
    } else {
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2);
    }
}

result_recursive = [];
for (i in range(0, 10)) {
    result_recursive = result_recursive + [fibonacci_recursive(i)];
}

print(result_recursive);

v = vec.new(0,0);
v.print();

